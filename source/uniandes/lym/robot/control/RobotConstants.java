/* Generated By: Autor&JavaCC: Do not edit this line. RobotConstants.java */
package uniandes.lym.robot.control;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RobotConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MOV = 5;
  /** RegularExpression Id. */
  int RIGHT = 6;
  /** RegularExpression Id. */
  int PUT = 7;
  /** RegularExpression Id. */
  int PICK = 8;
  /** RegularExpression Id. */
  int POP = 9;
  /** RegularExpression Id. */
  int GO = 10;
  /** RegularExpression Id. */
  int HOP = 11;
  /** RegularExpression Id. */
  int EXEC = 12;
  /** RegularExpression Id. */
  int NEW = 13;
  /** RegularExpression Id. */
  int VAR = 14;
  /** RegularExpression Id. */
  int MACRO = 15;
  /** RegularExpression Id. */
  int EQUALS = 16;
  /** RegularExpression Id. */
  int LEFT = 17;
  /** RegularExpression Id. */
  int BACK = 18;
  /** RegularExpression Id. */
  int NORTH = 19;
  /** RegularExpression Id. */
  int SOUTH = 20;
  /** RegularExpression Id. */
  int EAST = 21;
  /** RegularExpression Id. */
  int WEST = 22;
  /** RegularExpression Id. */
  int WALK = 23;
  /** RegularExpression Id. */
  int JUMP = 24;
  /** RegularExpression Id. */
  int MOVES = 25;
  /** RegularExpression Id. */
  int NOP = 26;
  /** RegularExpression Id. */
  int SAFEEXE = 27;
  /** RegularExpression Id. */
  int ISBLOCKED = 28;
  /** RegularExpression Id. */
  int ISFACING = 29;
  /** RegularExpression Id. */
  int ZERO = 30;
  /** RegularExpression Id. */
  int QUESTIONMARK = 31;
  /** RegularExpression Id. */
  int IF = 32;
  /** RegularExpression Id. */
  int THEN = 33;
  /** RegularExpression Id. */
  int ELSE = 34;
  /** RegularExpression Id. */
  int FI = 35;
  /** RegularExpression Id. */
  int DO = 36;
  /** RegularExpression Id. */
  int OD = 37;
  /** RegularExpression Id. */
  int REP = 38;
  /** RegularExpression Id. */
  int TIMES = 39;
  /** RegularExpression Id. */
  int PER = 40;
  /** RegularExpression Id. */
  int NOT = 41;
  /** RegularExpression Id. */
  int LETGO = 42;
  /** RegularExpression Id. */
  int TURNTOMY = 43;
  /** RegularExpression Id. */
  int TURNTOTHE = 44;
  /** RegularExpression Id. */
  int SIZE = 45;
  /** RegularExpression Id. */
  int MYCHIPS = 46;
  /** RegularExpression Id. */
  int MYBALLOONS = 47;
  /** RegularExpression Id. */
  int BALLONSHERE = 48;
  /** RegularExpression Id. */
  int BALLOONS = 49;
  /** RegularExpression Id. */
  int CHIPS = 50;
  /** RegularExpression Id. */
  int NUM = 51;
  /** RegularExpression Id. */
  int DIGIT = 52;
  /** RegularExpression Id. */
  int ID = 53;
  /** RegularExpression Id. */
  int LETTER = 54;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"Mov\"",
    "\"RIGHT\"",
    "\"Put\"",
    "\"Pick\"",
    "\"Pop\"",
    "\"GO\"",
    "\"HOP\"",
    "\"EXEC\"",
    "\"NEW\"",
    "\"VAR\"",
    "\"MACRO\"",
    "\"=\"",
    "\"left\"",
    "\"back\"",
    "\"north\"",
    "\"south\"",
    "\"east\"",
    "\"west\"",
    "\"walk\"",
    "\"jump\"",
    "\"moves\"",
    "\"nop\"",
    "\"safeExe\"",
    "\"blocked\"",
    "\"facing\"",
    "\"zero\"",
    "\"?\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"fi\"",
    "\"do\"",
    "\"od\"",
    "\"rep\"",
    "\"times\"",
    "\"per\"",
    "\"not\"",
    "\"letGo\"",
    "\"turnToMy\"",
    "\"turnToThe\"",
    "\"size\"",
    "\"myChips\"",
    "\"myBalloons\"",
    "\"balloonsHere\"",
    "\"BALLOONS\"",
    "\"CHIPS\"",
    "<NUM>",
    "<DIGIT>",
    "<ID>",
    "<LETTER>",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
  };

}
